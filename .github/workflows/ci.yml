name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Test (Node.js 20.x, Ubuntu)"
            os: ubuntu-latest
            node-version: "20.x"
          - name: "Test (Node.js 22.x, Ubuntu)"
            os: ubuntu-latest
            node-version: "22.x"
          - name: "Test (Node.js 24.x, Ubuntu)"
            os: ubuntu-latest
            node-version: "24.x"
          - name: "Test (Node.js 20.x, Windows)"
            os: windows-latest
            node-version: "20.x"
          - name: "Test (Node.js 22.x, Windows)"
            os: windows-latest
            node-version: "22.x"
          - name: "Lint"
            os: ubuntu-latest
            node-version: "20.x"
          - name: "Build & Package"
            os: ubuntu-latest
            node-version: "20.x"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test
      
    - name: Run linting
      if: matrix.name == 'Lint'
      run: npm run lint

    - name: Build and package
      if: matrix.name == 'Build & Package'
      run: |
        npm pack --dry-run
        echo "Package size:"
        npm pack --silent | xargs ls -lh
        
    - name: Test CLI installation
      if: matrix.name == 'Build & Package'
      run: |
        npm pack
        npm install -g *.tgz
        flame --help
        
    - name: Test examples (Linux)
      if: runner.os == 'Linux'
      run: |
        timeout 30s node examples/load-test-server.js &
        SERVER_PID=$!
        sleep 5
        node examples/run-load-test.js
        kill $SERVER_PID || true
        
    - name: Test examples (Windows)  
      if: runner.os == 'Windows'
      run: |
        # Start server in background and get process info
        $serverProcess = Start-Process -FilePath "node" -ArgumentList "examples/load-test-server.js" -NoNewWindow -PassThru
        Write-Output "Server started with PID: $($serverProcess.Id)"
        Start-Sleep -Seconds 5
        
        # Run load test
        node examples/run-load-test.js
        
        # Clean up - stop the server process
        try {
          Stop-Process -Id $serverProcess.Id -Force -ErrorAction SilentlyContinue
          Write-Output "Server process stopped"
        } catch {
          Write-Output "Server process may have already exited"
        }
      shell: powershell